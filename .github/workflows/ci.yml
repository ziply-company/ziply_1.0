name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  ci:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    # Services required by Django
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: test
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
        ports: ["5432:5432"]
        options: >-
          --health-cmd="pg_isready -U test"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
      redis:
        image: redis:7-alpine
        ports: ["6379:6379"]
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-retries=5

    steps:
    # 1. code Checkout
    - uses: actions/checkout@v4

    # ───────────────  PYTHON (Django)  ───────────────
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Cache pip
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}

    - name: Install backend deps
      run: pip install -r requirements.txt

    - name: Django Lint & Tests
      env:
        DJANGO_SETTINGS_MODULE: ziply.settings_ci
        DATABASE_URL: postgres://test:test@localhost:5432/test
        REDIS_URL: redis://localhost:6379/0
      run: |
        black --check .
        isort --check-only .
        flake8 .
        pytest --cov=ziply --cov-report=term --cov-report=xml


    # ───────────────  NODE (Next.js)  ───────────────
    - name: Check if frontend exists
      id: frontend_exists
      run: echo "exists=$(if [ -d frontend ]; then echo true; else echo false; fi)" >> $GITHUB_OUTPUT

    - name: Set up Node
      if: steps.frontend_exists.outputs.exists == 'true
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install frontend deps
      if: steps.frontend_exists.outputs.exists == 'true
      working-directory: frontend
      run: npm ci

    - name: Lint & Test frontend
      working-directory: frontend
      run: |
        npm run lint
        npm run test -- --watchAll=false

    - name: Build Next.js
      if: steps.frontend_exists.outputs.exists == 'true
      working-directory: frontend
      run: npm run build
