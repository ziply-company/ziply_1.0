name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  ci:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: test
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
        ports: ["5432:5432"]
        options: >-
          --health-cmd="pg_isready -U test"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
      redis:
        image: redis:7-alpine
        ports: ["6379:6379"]
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-retries=5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}

      - name: Install backend deps
        run: pip install -r requirements.txt

      - name: Lint backend
        run: |
          ruff format --check .
          ruff check .

      - name: Run Django tests (optional)
        env:
          DJANGO_SETTINGS_MODULE: ziply.settings_ci
        continue-on-error: true
        run: |
          echo "Checking if tests exist..."
          if ls **/test*.py 1> /dev/null 2>&1; then
            echo "Tests found, running pytest..."
            pytest --cov=ziply --cov-report=term --cov-report=xml
          else
            echo "No tests found, skipping pytest."
          fi

      # ─────────────── FRONTEND (optional) ───────────────

      - name: Check if frontend exists
        id: frontend_exists
        run: echo "exists=$(if [ -d frontend ]; then echo true; else echo false; fi)" >> $GITHUB_OUTPUT

      - name: Set up Node
        if: steps.frontend_exists.outputs.exists == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend deps without running prepare
        if: steps.frontend_exists.outputs.exists == 'true'
        working-directory: frontend
        env:
          HUSKY: 0
        run: npm ci

      - name: Lint & Test frontend
        if: steps.frontend_exists.outputs.exists == 'true'
        working-directory: frontend
        run: |
          npm run lint || echo "Lint skipped"
          npm run test -- --watchAll=false || echo "Tests skipped"

      - name: Build Next.js
        if: steps.frontend_exists.outputs.exists == 'true'
        working-directory: frontend
        run: npm run build
