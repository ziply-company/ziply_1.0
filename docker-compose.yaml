services:
  web:
    build: .
    command: uvicorn ziply.asgi:application --host 0.0.0.0 --port 8000 --reload
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
    depends_on:
      - db
      - redis

  frontend:
    build:
      context: ./frontend
    command: npm run dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
    working_dir: /app
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    depends_on:
      - web

  celery:
    build: .
    command: celery -A ziply worker -l info --concurrency=4
    env_file: .env
    depends_on: [web, redis]
    volumes:
      - .:/app

  celery-beat:
    build: .
    command: celery -A ziply beat -l info -s /tmp/celerybeat-schedule
    env_file: .env
    depends_on: [web, redis]
    volumes:
      - .:/app

  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    ports: ["5432:5432"]

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    ports: ["6379:6379"]

  mailhog:
    image: mailhog/mailhog:v1.0.1
    ports: ["1025:1025", "8025:8025"]

volumes:
  db_data:
  redis_data:
  static_volume:
